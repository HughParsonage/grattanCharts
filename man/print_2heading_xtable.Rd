% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/print_2heading_xtable.R
\name{print_2heading_xtable}
\alias{print_2heading_xtable}
\title{Print LaTeX tables with headings over two lines}
\usage{
print_2heading_xtable(.data, separator = "__", xtable.align = NULL,
  booktabs = TRUE, heading_command = "\\\\textbf",
  xtable.dots = NULL, ...)
}
\arguments{
\item{.data}{A data frame with at least some of the column names having a \code{separator}.}

\item{separator}{A regular expression that splits the top and bottom rows. If the separator is not found in the names of \code{.data}, the function returns an error (saying you should probably just use \code{print.xtable()})}

\item{xtable.align}{Passed to \code{xtable}: Character vector of length equal to the number of columns of the resulting table, indicating the alignment of the corresponding columns.}

\item{booktabs}{Should the tabular environment produced use booktabs? Set to TRUE for (my) convenience. This will cause an error if  \verb{\usepackage{booktabs}} has not been called in LaTeX.}

\item{heading_command}{A (simple) LaTeX control sequence (properly escaped) to apply to each heading names.}

\item{xtable.dots}{Arguments passed to \code{xtable::xtable}. Providing both \code{xtable.dots} and \code{xtable.align} is an error.}

\item{...}{Arguments passed to \code{print.xtable}. You cannot pass \code{add.to.row}, \code{include.rownames}, or \code{include.colnames} as we make use of these options in this function.}
}
\value{
Output intended for LaTeX. A table produced using xtable where groups of column names are put in the top row.
}
\description{
Print LaTeX tables with headings over two lines
}
\examples{
example_df <- 
data.frame(yr = 2001:2005, 
          Revenue__foo = 1:5, 
          Revenue__bar = 11:15, 
          Revenue__baz = 21:25, 
          ordinary = 1:5,
          Expense__foo = 1:5,
          Expense__bar = 11:15, 
          Expense__baz = 21:25, 
          Last__foo = 1:5, 
          Last__baz = 2:6,
          last = 101:105)
print_2heading_xtable(example_df, separator = "__")
print_2heading_xtable(example_df, separator = "__", xtable.dots = list(caption = "My caption"))
}
\author{
Hugh Parsonage
}
